!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.insert_view_adv=t())}(self,(()=>(()=>{var e={"ckeditor5/src/core.js":(e,t,n)=>{e.exports=n("dll-reference CKEditor5.dll")("./src/core.js")},"ckeditor5/src/ui.js":(e,t,n)=>{e.exports=n("dll-reference CKEditor5.dll")("./src/ui.js")},"ckeditor5/src/widget.js":(e,t,n)=>{e.exports=n("dll-reference CKEditor5.dll")("./src/widget.js")},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var s=t[i]={exports:{}};return e[i](s,s.exports,n),s.exports}n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i={};return(()=>{"use strict";n.d(i,{default:()=>u});var e=n("ckeditor5/src/core.js"),t=n("ckeditor5/src/widget.js");class r extends e.Command{execute(e){const t=this.editor.plugins.get("InsertViewAdvEditing"),n=Object.entries(t.attrs).reduce(((e,[t,n])=>(e[n]=t,e)),{}),i=Object.keys(e).reduce(((t,i)=>(n[i]&&(t[n[i]]=e[i]),t)),{});this.editor.model.change((e=>{this.editor.model.insertContent(function(e,t){return e.createElement("insertViewAdv",t)}(e,i))}))}refresh(){const{model:e}=this.editor,{selection:t}=e.document,n=e.schema.findAllowedParent(t.getFirstPosition(),"insertViewAdv");this.isEnabled=null!==n}}function s(e){for(const t of e){if(t.hasAttribute("data-drupal-media-preview"))return t;if(t.childCount){const e=s(t.getChildren());if(e)return e}}return null}class o extends e.Plugin{static get requires(){return[t.Widget]}init(){this.attrs={drupalViewId:"data-view-id",drupalViewDisplay:"data-display-id",drupalViewAttributes:"data-arguments"};const e=this.editor.config.get("insertViewAdv");if(!e)return;const{previewURL:t,themeError:n}=e;this.previewUrl=t,this.labelError=Drupal.t("Preview failed"),this.themeError=n||`\n      <p>${Drupal.t("An error occurred while trying to preview the view. Please save your work and reload this page.")}<p>\n    `,this._defineSchema(),this._defineConverters(),this.editor.commands.add("insertViewAdv",new r(this.editor))}_defineSchema(){this.editor.model.schema.register("insertViewAdv",{isObject:!0,isContent:!0,isBlock:!0,allowAttributes:Object.keys(this.attrs),allowWhere:"$block"}),this.editor.editing.view.domConverter.blockElements.push("drupal-view")}_defineConverters(){const{conversion:e}=this.editor;e.for("upcast").elementToElement({model:"insertViewAdv",view:{name:"drupal-view"}}),e.for("dataDowncast").elementToElement({model:"insertViewAdv",view:{name:"drupal-view"}}),e.for("editingDowncast").elementToElement({model:"insertViewAdv",view:(e,{writer:n})=>{const i=n.createContainerElement("drupal-view",{});return n.setCustomProperty("insertViewAdv",!0,i),(0,t.toWidget)(i,n,{label:"Insert View widget"})}}).add((e=>(e.on("attribute:drupalViewId:insertViewAdv",((e,t,n)=>{const i=n.writer,r=t.item,o=n.mapper.toViewElement(t.item);let d=s(o.getChildren());if(d){if("ready"!==d.getAttribute("data-drupal-view-preview"))return;i.setAttribute("data-drupal-view-preview","loading",d)}else d=i.createRawElement("div",{"data-drupal-view-preview":"loading"}),i.insert(i.createPositionAt(o,0),d);this._fetchPreview(r).then((({preview:e})=>{d&&this.editor.editing.view.change((t=>{const n=t.createRawElement("div",{"data-drupal-view-preview":"ready"},(t=>{t.innerHTML=e}));t.insert(t.createPositionBefore(d),n),t.remove(d)}))}))})),e))),Object.keys(this.attrs).forEach((t=>{const n={model:{key:t,name:"insertViewAdv"},view:{name:"drupal-view",key:this.attrs[t]}};e.for("dataDowncast").attributeToAttribute(n),e.for("upcast").attributeToAttribute(n)}))}async _fetchPreview(e){const t={view_name:e.getAttribute("drupalViewId"),view_display_id:e.getAttribute("drupalViewDisplay"),view_args:e.getAttribute("drupalViewAttributes")},n=await fetch(`${this.previewUrl}?${new URLSearchParams(t)}`,{});if(n.ok){return{preview:await n.text()}}return{preview:this.themeError}}static get pluginName(){return"InsertViewAdvEditing"}}var d=n("ckeditor5/src/ui.js");class c extends e.Plugin{init(){const e=this.editor,t=this.editor.config.get("insertViewAdv");if(!t)return;const{libraryURL:n,openDialog:i,dialogSettings:r={}}=t;n&&"function"==typeof i&&e.ui.componentFactory.add("insertViewAdv",(t=>{const s=e.commands.get("insertViewAdv"),o=new d.ButtonView(t);return o.set({label:e.t("Insert View"),icon:'<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\n<svg\n    xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"\n    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\n    xmlns="http://www.w3.org/2000/svg"\n    xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\n    xmlns:cc="http://web.resource.org/cc/"\n    xmlns:xlink="http://www.w3.org/1999/xlink"\n    xmlns:dc="http://purl.org/dc/elements/1.1/"\n    xmlns:svg="http://www.w3.org/2000/svg"\n    xmlns:ns1="http://sozi.baierouge.fr"\n    id="svg1"\n    sodipodi:docname="insertcell.svg"\n    viewBox="0 0 60 60"\n    sodipodi:version="0.32"\n    version="1.0"\n    y="0"\n    x="0"\n    inkscape:version="0.38.1"\n    sodipodi:docbase="/home/danny/flat/scalable/actions"\n  >\n  <sodipodi:namedview\n      id="base"\n      bordercolor="#666666"\n      inkscape:pageshadow="2"\n      inkscape:window-width="1016"\n      pagecolor="#ffffff"\n      inkscape:zoom="9.8238823"\n      inkscape:window-x="0"\n      borderopacity="1.0"\n      inkscape:cx="38.848974"\n      inkscape:cy="20.576031"\n      inkscape:window-y="0"\n      inkscape:window-height="685"\n      inkscape:pageopacity="0.0"\n  />\n  <rect\n      id="rect860"\n      style="fill-rule:evenodd;fill:#b3b3b3"\n      rx="1.4303"\n      height="15.269"\n      width="26.753"\n      y="3.7595"\n      x="3.2758"\n  />\n  <path\n      id="path863"\n      sodipodi:nodetypes="cccccc"\n      style="stroke-linejoin:round;stroke:#4c4c4c;stroke-linecap:round;stroke-dasharray:2.5000000,2.5000000;stroke-width:2.5;fill:none"\n      d="m3.3996 19.028h25.138c1.108 0 2-0.892 2-2v-11.268c0-1.1085-0.892-2.0005-2-2.0005l-26.92-0.2545"\n      sodipodi:stroke-cmyk="(0.0000000 0.0000000 0.0000000 0.69999999)"\n  />\n  <rect\n      id="rect864"\n      style="fill-rule:evenodd;fill:#7f7f7f"\n      rx="1.7143"\n      transform="scale(-1 1)"\n      height="15.269"\n      width="32.065"\n      y="22.659"\n      x="-56.962"\n  />\n  <path\n      id="path865"\n      sodipodi:nodetypes="cccccc"\n      style="stroke-linejoin:round;stroke:#333333;stroke-linecap:round;stroke-width:2.5;fill:none"\n      d="m56.362 37.928h-29.973c-1.108 0-2-0.892-2-2v-11.269c0-1.108 0.892-2 2-2h30.482"\n      sodipodi:stroke-cmyk="(0.0000000 0.0000000 0.0000000 0.80000001)"\n  />\n  <rect\n      id="rect868"\n      style="fill-rule:evenodd;fill:#b3b3b3"\n      rx="1.4303"\n      height="15.269"\n      width="26.753"\n      y="41.672"\n      x="3.2758"\n  />\n  <path\n      id="path869"\n      sodipodi:nodetypes="cccccc"\n      style="stroke-linejoin:round;stroke:#4c4c4c;stroke-linecap:round;stroke-dasharray:2.5000000,2.5000000;stroke-width:2.5;fill:none"\n      d="m3.3996 56.941h25.138c1.108 0 2-0.892 2-2v-11.269c0-1.108-0.892-2-2-2l-26.92-0.255"\n      sodipodi:stroke-cmyk="(0.0000000 0.0000000 0.0000000 0.69999999)"\n  />\n  <path\n      id="path878"\n      sodipodi:nodetypes="cccc"\n      style="stroke-linejoin:round;fill-rule:evenodd;stroke:#333333;stroke-linecap:round;stroke-width:3.125;fill:#7f7f7f"\n      d="m18.771 44.913l-13.272-14.877 13.382-14.41-0.11 29.287z"\n      sodipodi:stroke-cmyk="(0 0 0 0.8)"\n  />\n  <metadata\n    >\n    <rdf:RDF\n      >\n      <cc:Work\n        >\n        <dc:format\n          >image/svg+xml</dc:format\n        >\n        <dc:type\n            rdf:resource="http://purl.org/dc/dcmitype/StillImage"\n        />\n        <cc:license\n            rdf:resource="http://creativecommons.org/licenses/publicdomain/"\n        />\n        <dc:publisher\n          >\n          <cc:Agent\n              rdf:about="http://openclipart.org/"\n            >\n            <dc:title\n              >Openclipart</dc:title\n            >\n          </cc:Agent\n          >\n        </dc:publisher\n        >\n        <dc:title\n          >ftinsertcell</dc:title\n        >\n        <dc:date\n          >2011-01-31T02:01:36</dc:date\n        >\n        <dc:description\n          >Originally uploaded by Danny Allen for OCAL 0.18 this icon is part of the flat theme</dc:description\n        >\n        <dc:source\n          >https://openclipart.org/detail/112861/ftinsertcell-by-anonymous</dc:source\n        >\n        <dc:creator\n          >\n          <cc:Agent\n            >\n            <dc:title\n              >Anonymous</dc:title\n            >\n          </cc:Agent\n          >\n        </dc:creator\n        >\n        <dc:subject\n          >\n          <rdf:Bag\n            >\n            <rdf:li\n              >flat</rdf:li\n            >\n            <rdf:li\n              >icon</rdf:li\n            >\n            <rdf:li\n              >theme</rdf:li\n            >\n          </rdf:Bag\n          >\n        </dc:subject\n        >\n      </cc:Work\n      >\n      <cc:License\n          rdf:about="http://creativecommons.org/licenses/publicdomain/"\n        >\n        <cc:permits\n            rdf:resource="http://creativecommons.org/ns#Reproduction"\n        />\n        <cc:permits\n            rdf:resource="http://creativecommons.org/ns#Distribution"\n        />\n        <cc:permits\n            rdf:resource="http://creativecommons.org/ns#DerivativeWorks"\n        />\n      </cc:License\n      >\n    </rdf:RDF\n    >\n  </metadata\n  >\n</svg\n>\n',tooltip:!0}),o.bind("isOn","isEnabled").to(s,"value","isEnabled"),this.listenTo(o,"execute",(()=>{i(n,(({attributes:t})=>{e.execute("insertViewAdv",t)}),r)})),o}))}}function a(e,t,n){if(!n.consumable.consume(t.item,e.name))return;const i=n.mapper.toViewElement(t.item);!function(e,t,n){if(t.attributes)for(const[i,r]of Object.entries(t.attributes))e.setAttribute(i,r,n);t.styles&&e.setStyle(t.styles,n),t.classes&&e.addClass(t.classes,n)}(n.writer,t.attributeNewValue,i)}class l extends e.Plugin{constructor(e){if(super(e),!e.plugins.has("GeneralHtmlSupport"))return;e.plugins.has("DataFilter")&&e.plugins.has("DataSchema")||console.error("DataFilter and DataSchema plugins are required for Drupal Media to integrate with General HTML Support plugin.");const{schema:t}=e.model,{conversion:n}=e,i=this.editor.plugins.get("DataFilter");this.editor.plugins.get("DataSchema").registerBlockElement({model:"insertViewAdv",view:"drupal-view"}),i.on("register:drupal-view",((e,r)=>{"insertViewAdv"===r.model&&(t.extend("insertViewAdv",{allowAttributes:["htmlAttributes"]}),n.for("upcast").add(function(e){return t=>{t.on("element:drupal-view",((t,n,i)=>{!function(t,r){const s=e.processViewAttributes(t,i);s&&i.writer.setAttribute(r,s,n.modelRange)}(n.viewItem,"htmlAttributes")}),{priority:"low"})}}(i)),n.for("dataDowncast").add((e=>{e.on("attribute:htmlAttributes:insertViewAdv",a,{priority:"low"})})),e.stop())}))}}class p extends e.Plugin{static get requires(){return[l,o,c]}}const u={InsertViewAdv:p}})(),i=i.default})()));